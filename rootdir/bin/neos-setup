#!/system/bin/sh

log="/data/.neos-setup"

# mount
SLOT_SUFFIX="$(getprop ro.boot.slot_suffix)"

blockdev --setrw /dev/block/by-name/system${SLOT_SUFFIX}
mount -o remount,rw -t auto / || mount -o remount,rw -t auto /system
mount -o remount,rw /data

LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib
PATH=/usr/local/bin:/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/sbin:/data/data/com.termux/files/usr/bin/applets:/bin:/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
HOME=/data/data/com.termux/files/home

RSA_KEY=/system/etc/ssh/ssh_host_rsa_key
RSA_PUB_KEY=/system/etc/ssh/ssh_host_rsa_key.pub

rm -f $log
echo "neos-setup log" >> $log

(
if [ ! -d /data/data/com.termux/files ]; then
    mkdir /data/data/com.termux 0777 root root
    mkdir /data/data/com.termux/files 0777 root root
    mkdir /data/data/com.termux/files/tmp 0777 root root
fi

cd /data/data/com.termux/files
if [ ! -d /data/data/com.termux/files/usr ]; then
    mkdir -p /data/data/com.termux/cache
    mkdir home usr
    # bootstrap
    unzip -d usr /system/etc/termux-bootstrap.zip
    # comma home
    unzip -d home /system/etc/termux-home.zip

    cd usr
    # symlinks
    cat SYMLINKS.txt | while read -r line; do
        dest=$(echo "$line" | awk -F '←' '{ print $1 }')
        link=$(echo "$line" | awk -F '←' '{ print $2 }')
        echo "Creating symlink: $link --> $dest"
        ln -s "$dest" "$link"
    done
    rm -f SYMLINKS.txt

    # generic perms eh
    find /data/data/com.termux/files -type d -exec chmod 700 "{}" \;
    find /data/data/com.termux/files/usr -type f -executable -exec chmod 700 "{}" \;
    find /data/data/com.termux/files/usr -type f ! -executable -exec chmod 600 "{}" \;

    # bootstrap perms
    find bin lib/apt lib/bash libexec -type f -exec chmod 700 "{}" \;
    for p in ./share/doc/util-linux/getopt/getopt-prase.bash \
    	./share/doc/util-linux/getopt/getopt-parse.tcsh \
	    ./var/service/ftpd/run ./var/service/telnetd/run; do
        if [ -f "$p" ]; then
            chmod 700 "$p"
        fi
    done

    cd ..

    # execute post install
    (
    export HOME
    export LD_LIBRARY_PATH
    export PATH

    cd $HOME

    exec ./install.sh
    )
fi

# our ssh keys
if [ ! -d /data/data/com.termux/files/home/.ssh ]; then
    mkdir -p /data/data/com.termux/files/home/.ssh
    cd /data/data/com.termux/files/home/

    touch ./.ssh/authorized_keys
    chmod 600 .ssh/authorized_keys
    chmod 700 .ssh

    cp -f $RSA_KEY .ssh/id_rsa
    cp -f $RSA_PUB_KEY .ssh/id_rsa.pub
    chmod 600 .ssh/id_rsa
    chmod 644 .ssh/id_rsa.pub

    cat .ssh/id_rsa.pub >> .ssh/authorized_keys
    chmod 600 .ssh/authorized_keys
fi

# for comma compatibility
if [ ! -d /system/comma/ ]; then
    mkdir -p /system/comma/
    ln -sf /data/data/com.termux/files/usr /system/comma/usr
    ln -sf /data/data/com.termux/files/home /system/comma/home
fi

# for moar compatibility
if [ ! -d /usr ]; then
    mkdir -p /usr
    ln -sf /data/data/com.termux/files/usr /usr
fi

if [ ! -d /tmp ]; then
    mkdir -p -m 1777 /tmp
    ln -sf /data/data/com.termux/files/tmp /tmp
fi

# ready
if [ -f /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then
    setprop neos.termux_ready 1
fi
) 2>&1 | tee -a ./$log;

# unmount
blockdev --setro /dev/block/by-name/system${SLOT_SUFFIX}
mount -o remount,ro -t auto / || mount -o remount,ro -t auto /system
mount -o remount,rw /data